{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar screenHeight = Dimensions.get(\"screen\").height;\n\nvar CryptoList = function CryptoList(_ref) {\n  var filteredList = _ref.filteredList,\n      setQuery = _ref.setQuery,\n      getPrice = _ref.getPrice;\n\n  var select = function select(item) {\n    var myPromise;\n    return _regeneratorRuntime.async(function select$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            myPromise = new Promise(function (resolve, reject) {\n              resolve(setQuery(item.name));\n            });\n            myPromise.then(getPrice());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, filteredList.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return select(item);\n      }\n    }, React.createElement(Text, {\n      style: styles.item\n    }, item.name));\n  })));\n};\n\nexport default CryptoList;\nvar styles = StyleSheet.create({\n  container: {\n    width: screenWidth * 0.8,\n    backgroundColor: \"rgba(60, 58, 102, 0.8)\",\n    maxHeight: 200,\n    marginTop: 5\n  },\n  item: {\n    fontSize: 16,\n    color: \"white\",\n    margin: 5\n  }\n});","map":{"version":3,"sources":["/Users/tamasfarago/cryptosearcher/components/CryptoList.tsx"],"names":["React","screenWidth","Dimensions","get","width","screenHeight","height","CryptoList","filteredList","setQuery","getPrice","select","item","myPromise","Promise","resolve","reject","name","then","styles","container","map","index","StyleSheet","create","backgroundColor","maxHeight","marginTop","fontSize","color","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,IAAMC,WAAmB,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAArD;AACA,IAAMC,YAAoB,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAtD;;AAEA,IAAMC,UAAoB,GAAG,SAAvBA,UAAuB,OAAuC;AAAA,MAArCC,YAAqC,QAArCA,YAAqC;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAEhE,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAGLC,YAAAA,SAHK,GAGO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/CD,cAAAA,OAAO,CAACN,QAAQ,CAACG,IAAI,CAACK,IAAN,CAAT,CAAP;AACD,aAFe,CAHP;AAOXJ,YAAAA,SAAS,CAACK,IAAV,CAAeR,QAAQ,EAAvB;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAaA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACA,oBAAC,UAAD,QACKZ,YAAY,CAACa,GAAb,CAAiB,UAACT,IAAD,EAAYU,KAAZ;AAAA,WACd,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMX,MAAM,CAACC,IAAD,CAAZ;AAAA;AAA3B,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACP;AAApB,OAA2BA,IAAI,CAACK,IAAhC,CADA,CADc;AAAA,GAAjB,CADL,CADA,CADJ;AAWH,CA1BD;;AA4BA,eAAeV,UAAf;AAEA,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPhB,IAAAA,KAAK,EAAEH,WAAW,GAAG,GADd;AAEPwB,IAAAA,eAAe,EAAE,wBAFV;AAGPC,IAAAA,SAAS,EAAE,GAHJ;AAIPC,IAAAA,SAAS,EAAE;AAJJ,GADkB;AAS7Bf,EAAAA,IAAI,EAAE;AACFgB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE,OAFL;AAIFC,IAAAA,MAAM,EAAE;AAJN;AATuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Dimensions, ScrollView, TouchableOpacity} from 'react-native'\n\nconst screenWidth: number = Dimensions.get(\"screen\").width\nconst screenHeight: number = Dimensions.get(\"screen\").height\n\nconst CryptoList: React.FC = ({filteredList, setQuery, getPrice}) =>{\n\n    const select = async(item) => {\n        // await setQuery(item.name)\n        // .then(getPrice())\n        const myPromise = new Promise((resolve, reject) => {\n            resolve(setQuery(item.name))\n          });\n\n        myPromise.then(getPrice())\n    }\n\n    \n\n\n    return (\n        <View style={styles.container}>\n        <ScrollView>\n            {filteredList.map((item: any, index: number) => (\n                <TouchableOpacity onPress={() =>Â select(item)}>\n                <Text style={styles.item}>{item.name}</Text>\n                </TouchableOpacity>\n            ))}\n        </ScrollView>\n        </View>\n    )\n}\n\nexport default CryptoList\n\nconst styles = StyleSheet.create({\n    container: {\n        width: screenWidth * 0.8,\n        backgroundColor: \"rgba(60, 58, 102, 0.8)\",\n        maxHeight: 200,\n        marginTop: 5,\n       \n        // overflow: \"hidden\"\n    },\n    item: {\n        fontSize: 16,\n        color: \"white\",\n        // marginBottom: 5,\n        margin: 5\n    }\n})\n"]},"metadata":{},"sourceType":"module"}