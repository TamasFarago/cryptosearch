{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport axios from 'axios';\nimport CryptoList from \"./components/CryptoList\";\nimport { fetchData } from \"./globalFunctions/FetchData\";\nimport { ActivityIndicator } from 'react-native-paper';\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar baseURL = \"https://api.coingecko.com/api/v3\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentCrypto = _useState6[0],\n      setCurrentCrypto = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      list = _useState10[0],\n      setList = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      openList = _useState12[0],\n      setOpenList = _useState12[1];\n\n  var getPrice = function getPrice() {\n    fetchData(setPrice, setCurrentCrypto, setLoading, baseURL, setOpenList, query);\n  };\n\n  var fetchBulk = function fetchBulk() {\n    var response;\n    return _regeneratorRuntime.async(function fetchBulk$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(baseURL + \"/coins/markets?vs_currency=usd&per_page=100&page=1\"));\n\n          case 3:\n            response = _context.sent;\n            setList(response.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    fetchBulk();\n  }, []);\n\n  var handleType = function handleType(text) {\n    setOpenList(true);\n    setQuery(text);\n  };\n\n  var filteredList = list.filter(function (coin) {\n    return coin.id.toLowerCase().includes(query.toLowerCase());\n  });\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: '#1a1845',\n      flex: 1\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : \"height\"\n  }, React.createElement(View, {\n    style: {\n      top: Platform.OS == \"android\" ? 40 : 0\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return handleType(text);\n    },\n    placeholder: \"Search for a crypto\",\n    placeholderTextColor: \"rgba(255,255,255,0.3)\"\n  }), openList && query !== \"\" && React.createElement(CryptoList, {\n    filteredList: filteredList,\n    setLoading: setLoading,\n    setPrice: setPrice,\n    setCurrentCrypto: setCurrentCrypto,\n    baseURL: baseURL,\n    setOpenList: setOpenList\n  })), price && !loading && React.createElement(View, {\n    style: styles.priceContainer\n  }, React.createElement(Text, {\n    style: styles.infoText\n  }, currentCrypto, \"'s current price is:\"), React.createElement(Text, {\n    style: styles.price\n  }, \"$\", price[0].usd)), loading && React.createElement(ActivityIndicator, {\n    color: \"white\"\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    disabled: !query.length,\n    onPress: getPrice\n  }, React.createElement(View, {\n    style: [styles.button, {\n      opacity: !query.length ? 0.5 : 1\n    }]\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Search\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1a1845',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  textInput: {\n    height: 50,\n    width: screenWidth * 0.8,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(227, 227, 227, 0.7)\",\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"600\",\n    paddingHorizontal: 5\n  },\n  button: {\n    width: screenWidth * 0.8,\n    height: 40,\n    borderRadius: 16,\n    backgroundColor: \"rgba(109, 207, 135, 1)\",\n    marginTop: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"600\"\n  },\n  priceContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    zIndex: -9,\n    height: screenHeight * 0.3,\n    width: screenWidth\n  },\n  price: {\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"500\",\n    position: \"relative\",\n    zIndex: 9\n  },\n  contentContainer: {\n    height: screenHeight * 0.3,\n    width: screenWidth,\n    justifyContent: \"center\"\n  },\n  infoText: {\n    color: \"white\",\n    fontSize: 20,\n    marginBottom: 20\n  },\n  list: {\n    width: screenWidth * 0.8\n  }\n});","map":{"version":3,"sources":["/Users/tamasfarago/cryptosearcher/App.tsx"],"names":["React","useState","useEffect","axios","CryptoList","fetchData","ActivityIndicator","screenWidth","Dimensions","get","width","screenHeight","height","baseURL","App","query","setQuery","price","setPrice","currentCrypto","setCurrentCrypto","loading","setLoading","list","setList","openList","setOpenList","getPrice","fetchBulk","response","data","console","log","handleType","text","filteredList","filter","coin","id","toLowerCase","includes","backgroundColor","flex","styles","container","Platform","OS","top","textInput","priceContainer","infoText","usd","length","button","opacity","buttonText","StyleSheet","create","alignItems","justifyContent","borderWidth","borderBottomWidth","borderBottomColor","color","fontSize","fontWeight","paddingHorizontal","borderRadius","marginTop","marginBottom","position","zIndex","contentContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { \n  StyleSheet, \n  Text, \n  View, \n  Platform, \n  TextInput, \n  SafeAreaView, \n  Dimensions, \n  TouchableOpacity,\n  KeyboardAvoidingView,\n } from 'react-native';\nimport axios from 'axios';\nimport CryptoList from './components/CryptoList';\nimport { fetchData } from './globalFunctions/FetchData';\nimport { ActivityIndicator } from 'react-native-paper';\n\nconst screenWidth: number = Dimensions.get(\"screen\").width\nconst screenHeight: number = Dimensions.get(\"screen\").height\nconst baseURL: string = \"https://api.coingecko.com/api/v3\"\n\n\nexport default function App() {\n  const [query, setQuery] = useState<string>(\"\")\n  const [price, setPrice] = useState<any>()\n  const [currentCrypto, setCurrentCrypto] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n  const [list, setList] = useState<any>([])\n  const [openList, setOpenList] = useState<boolean>(false)\n\n  // FETCHES THE SEARCHED CRYPTO'S PRICE\n\n  const getPrice = () => {\n      fetchData(setPrice, setCurrentCrypto, setLoading, baseURL, setOpenList, query,)\n  }\n\n  // FETCHES A LIST OF CRYPTOS WHEN THE COMPONENT MOUNTS\n\n  const fetchBulk = async() =>{\n    try{\n      const response = await axios.get(`${baseURL}/coins/markets?vs_currency=usd&per_page=100&page=1`);\n      setList(response.data)\n    } catch(error){\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchBulk()\n  }, [])\n\n  // RUNS WHEN A USER IS TYPING\n\n  const handleType = (text: string) => {\n    setOpenList(true)\n    setQuery(text)\n  }\n\n  const filteredList = list.filter((coin: any) => coin.id.toLowerCase().includes(query.toLowerCase()))\n\n\n  return (\n    <>\n    <SafeAreaView style={{backgroundColor: '#1a1845', flex: 1}}>\n    <KeyboardAvoidingView \n      style={styles.container} \n      behavior={Platform.OS === 'ios'? 'padding' : \"height\"}>\n      <View style={{top: Platform.OS == \"android\"? 40 : 0}}>\n        <TextInput \n          style={styles.textInput}\n          onChangeText={text => handleType(text)}\n          placeholder=\"Search for a crypto\"\n          placeholderTextColor=\"rgba(255,255,255,0.3)\"\n          />\n        {openList && query !== \"\" &&\n        <CryptoList \n          filteredList={filteredList}\n          setLoading={setLoading}\n          setPrice={setPrice}\n          setCurrentCrypto={setCurrentCrypto}\n          baseURL={baseURL}\n          setOpenList={setOpenList}\n          /> \n        }\n      </View> \n     \n      {price && !loading && \n      <View style={styles.priceContainer}>\n        <Text style={styles.infoText}>{currentCrypto}'s current price is:</Text>\n        <Text style={styles.price}>\n          ${price[0].usd}\n        </Text>\n      </View>\n      }\n      {loading && <ActivityIndicator color=\"white\"/>}\n\n      <TouchableOpacity activeOpacity={0.8} disabled={!query.length} onPress={getPrice}>\n          <View style={[styles.button, {opacity: !query.length? 0.5 : 1}]}>\n              <Text style={styles.buttonText}>Search</Text>\n          </View>\n      </TouchableOpacity>\n\n      </KeyboardAvoidingView> \n    </SafeAreaView>\n    </>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1a1845',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  textInput: {\n    height: 50,\n    width: screenWidth*0.8,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(227, 227, 227, 0.7)\",\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"600\",\n    paddingHorizontal: 5\n  },\n  button: {\n    width: screenWidth*0.8,\n    height: 40,\n    borderRadius: 16,\n    backgroundColor: \"rgba(109, 207, 135, 1)\",\n    marginTop: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"600\"\n  },\n  priceContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    zIndex: -9,\n    height: screenHeight * 0.3,\n    width: screenWidth,\n  },\n  price: {\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"500\",\n    position: \"relative\",\n    zIndex: 9,\n  },\n  contentContainer: {\n    height: screenHeight*0.3, \n    width: screenWidth, \n    justifyContent: \"center\"\n  },\n  infoText: {\n    color: \"white\", \n    fontSize: 20, \n    marginBottom: 20\n  },\n  list: {\n    width: screenWidth * 0.8,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}